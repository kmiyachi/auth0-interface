{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\auth0-interface\\\\frontend\\\\src\\\\SignUp\\\\SignUpForm.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport './SignUpForm.css';\nimport { Button } from 'react-bootstrap';\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleUserRegisChange = event => {\n      event.preventDefault();\n      this.username = event.target.value;\n    };\n\n    this.handlePasswordRegisChange = event => {\n      event.preventDefault();\n      this.password = event.target.value;\n    };\n\n    this.handleNameChange = event => {\n      event.preventDefault();\n      this.name = event.target.value;\n    };\n\n    this.handleEmailChange = event => {\n      event.preventDefault();\n      this.email = event.target.value;\n    };\n\n    this.handleLicenseChange = event => {\n      event.preventDefault();\n      this.license = event.target.value;\n    };\n\n    this.handleRoleChange = event => {\n      event.preventDefault();\n      this.role = document.getElementById(\"role\").value;\n    };\n\n    this.handleAddressChange = event => {\n      event.preventDefault();\n      this.address = event.target.value;\n    };\n\n    this.username = \"\";\n    this.password = \"\";\n    this.name = \"\";\n    this.role = \"bus\";\n    this.license = \"\";\n    this.email = \"\";\n    this.address = \"\";\n    this.registration_errmsg = \"\";\n    this.username_err = false;\n    this.password_err = false;\n    this.name_err = false;\n    this.license_err = false;\n    this.email_err = false;\n    this.address_err = false;\n    this.state = {\n      regis_success: false\n    };\n    this.onChange = this.onChange.bind(this); // this.handleUserLoginChange = this.handleUserLoginChange.bind(this);\n    // this.handlePasswordLoginChange = this.handlePasswordLoginChange.bind(this);    \n\n    this.handleUserRegisChange = this.handleUserRegisChange.bind(this);\n    this.handlePasswordRegisChange = this.handlePasswordRegisChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleLicenseChange = this.handleLicenseChange.bind(this);\n    this.handleAddressChange = this.handleAddressChange.bind(this);\n    this.handleRoleChange = this.handleRoleChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.redirectAfterRegister = this.redirectAfterRegister.bind(this);\n    this.validateEmail = this.validateEmail.bind(this); // this.handleAdminIdChange = this.handleAdminIdChange.bind(this);\n    // this.handleAdminPwChange = this.handleAdminPwChange.bind(this);\n    // this.callLogin = this.callLogin.bind(this);\n    // this.callEnrollAdmin = this.callEnrollAdmin.bind(this);\n\n    this.callRegister = this.callRegister.bind(this);\n  }\n\n  //   handleAdminIdChange = event => {\n  //     event.preventDefault()\n  //     this.setState({ admin_id: event.target.value });\n  //   }\n  //   handleAdminPwChange = event => {\n  //     event.preventDefault()\n  //     this.setState({ admin_pw: event.target.value });\n  //   }\n  //   callLogin() {\n  //     if (this.state.login_password && this.state.login_username) {\n  //       const loginData = {\n  //         username: this.state.login_username,\n  //         password: this.state.login_password\n  //       }\n  //       $.ajax({\n  //         url: 'http://localhost:4000/login',\n  //         type: 'POST',\n  //         contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n  //         crossDomain: true,\n  //         dataType: 'json',\n  //         xhrFields: { withCredentials: true },\n  //         data: {\n  //           username: this.state.login_username,\n  //           password: this.state.login_password\n  //         },\n  //         success: (data) => {\n  //           if (data.message === \"OK\") {\n  //             this.setState({ login_success: true });\n  //             console.log('success');\n  //           } else {\n  //             this.setState({ login_success: false });\n  //             console.log('failure');\n  //           }\n  //         }\n  //       });\n  //     } else {\n  //       alert(\"Please fill in login form fields.\")\n  //     }\n  //   }\n  validateEmail(email) {\n    if (!email) {\n      return true;\n    }\n\n    var re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  callRegister() {\n    !this.username ? this.username_err = true : this.username_err = false;\n    !this.name ? this.name_err = true : this.name_err = false;\n    !this.password ? this.password_err = true : this.password_err = false;\n    !this.address ? this.address_err = true : this.address_err = false;\n    !this.license ? this.license_err = true : this.license_err = false;\n    !this.email || !this.validateEmail(this.email) ? this.email_err = true : this.email_err = false;\n\n    if (!this.username_err && !this.name_err && !this.password_err && !this.license_err && !this.address_err && !this.email_err) {\n      $.ajax({\n        url: 'http://localhost:4000/register',\n        type: 'POST',\n        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n        crossDomain: true,\n        dataType: 'json',\n        xhrFields: {\n          withCredentials: true\n        },\n        data: {\n          username: this.username,\n          password: this.password\n        },\n        success: data => {\n          if (data.message === \"OK\") {\n            this.registration_errmsg = \"\";\n            console.log('success');\n            this.setState({\n              regis_success: true\n            });\n            this.props.history.replace('/signup');\n          } else {\n            this.registration_errmsg = data.result;\n            console.log(this.registration_errmsg);\n            this.setState({\n              regis_success: false\n            });\n            console.log('failure');\n          }\n        }\n      });\n    } else {\n      console.log(\"failed to call register, \" + this.state.regis_success);\n      this.setState({\n        regis_success: false\n      });\n    }\n  } //   callEnrollAdmin() {\n  //     if (this.state.admin_id && this.state.admin_pw) {\n  //       const adminData = {\n  //         id: this.state.admin_id,\n  //         pw: this.state.admin_pw\n  //       }\n  //       console.log(JSON.stringify(adminData))\n  //       $.ajax({\n  //         url: 'http://localhost:4000/enroll',\n  //         context: document.body,\n  //         type: 'POST',\n  //         contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n  //         crossDomain: true,\n  //         dataType: 'json',\n  //         xhrFields: { withCredentials: true },\n  //         data: {\n  //           id: this.state.admin_id,\n  //           pw: this.state.admin_pw\n  //         },\n  //         success: (data) => {\n  //           if (data.message === \"OK\") {\n  //             this.setState({ enroll_success: true });\n  //             console.log('success');\n  //           } else {\n  //             this.setState({ enroll_success: false });\n  //             console.log('failure');\n  //           }\n  //         }\n  //       });\n  //     }\n  //     else {\n  //       alert(\"Please fill in admin form fields.\")\n  //     }\n  //   }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"interface\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.redirectAfterRegister(), React.createElement(\"div\", {\n      className: \"registerUserForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"regFormField\",\n      placeholder: \"Username\",\n      onChange: this.handleUserRegisChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), this.registration_errmsg === \"user duplicate\" ? React.createElement(\"div\", {\n      className: \"error_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Someone is already using this username.\") : null, this.username_err ? React.createElement(\"div\", {\n      className: \"error_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Fill in your username.\") : null, this.username_err || this.registration_errmsg === \"user duplicate\" ? null : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"regFormField\",\n      placeholder: \"Password\",\n      onChange: this.handlePasswordRegisChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), this.password_err ? React.createElement(\"div\", {\n      className: \"error_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Fill in your password.\") : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"regFormField\",\n      placeholder: \"Name\",\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), this.name_err ? React.createElement(\"div\", {\n      className: \"error_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Fill in your name.\") : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"regFormField\",\n      placeholder: \"Email\",\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), this.email_err ? React.createElement(\"div\", {\n      className: \"error_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Enter a valid email address.\") : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"regFormField\",\n      placeholder: \"Address\",\n      onChange: this.handleAddressChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), this.address_err ? React.createElement(\"div\", {\n      className: \"error_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Fill in your address.\") : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"regFormField\",\n      placeholder: \"License\",\n      onChange: this.handleLicenseChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), this.license_err ? React.createElement(\"div\", {\n      className: \"error_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Fill in your license.\") : React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      className: \"regFormField\",\n      id: \"role\",\n      onChange: this.handleRoleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"bus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Business\"), React.createElement(\"option\", {\n      value: \"fin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Financial Institution\"), React.createElement(\"option\", {\n      value: \"reg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Regulator\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.registration_errmsg === \"admin null\" ? React.createElement(\"div\", {\n      className: \"error_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"There is no admin node available.\") : null, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"submitButton\",\n      value: \"Register\",\n      onClick: this.callRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"loginDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.history.replace('/home'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Don't have an account? Sign Up\")));\n  }\n\n}\n\nexport default SignUpForm;","map":{"version":3,"sources":["C:\\Dev\\auth0-interface\\frontend\\src\\SignUp\\SignUpForm.js"],"names":["React","Component","$","Button","SignUpForm","constructor","props","onChange","e","setState","target","id","value","handleUserRegisChange","event","preventDefault","username","handlePasswordRegisChange","password","handleNameChange","name","handleEmailChange","email","handleLicenseChange","license","handleRoleChange","role","document","getElementById","handleAddressChange","address","registration_errmsg","username_err","password_err","name_err","license_err","email_err","address_err","state","regis_success","bind","redirectAfterRegister","validateEmail","callRegister","re","test","ajax","url","type","contentType","crossDomain","dataType","xhrFields","withCredentials","data","success","message","console","log","history","replace","result","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport './SignUpForm.css'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass SignUpForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.username = \"\";\r\n    this.password = \"\";\r\n    this.name = \"\";\r\n    this.role = \"bus\";\r\n    this.license = \"\";\r\n    this.email = \"\";\r\n    this.address = \"\";\r\n\r\n    this.registration_errmsg = \"\";\r\n    this.username_err = false;\r\n    this.password_err = false;\r\n    this.name_err = false;\r\n    this.license_err = false;\r\n    this.email_err = false;\r\n    this.address_err = false;\r\n    this.state = {\r\n      regis_success: false\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    // this.handleUserLoginChange = this.handleUserLoginChange.bind(this);\r\n    // this.handlePasswordLoginChange = this.handlePasswordLoginChange.bind(this);    \r\n    this.handleUserRegisChange = this.handleUserRegisChange.bind(this);\r\n    this.handlePasswordRegisChange = this.handlePasswordRegisChange.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleLicenseChange = this.handleLicenseChange.bind(this);\r\n    this.handleAddressChange = this.handleAddressChange.bind(this);\r\n    this.handleRoleChange = this.handleRoleChange.bind(this);\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.redirectAfterRegister = this.redirectAfterRegister.bind(this);\r\n    this.validateEmail = this.validateEmail.bind(this);\r\n    // this.handleAdminIdChange = this.handleAdminIdChange.bind(this);\r\n    // this.handleAdminPwChange = this.handleAdminPwChange.bind(this);\r\n    // this.callLogin = this.callLogin.bind(this);\r\n    // this.callEnrollAdmin = this.callEnrollAdmin.bind(this);\r\n    this.callRegister = this.callRegister.bind(this);\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  //   handleUserLoginChange = event => {\r\n  //     event.preventDefault()\r\n  //     this.setState({ login_username: event.target.value });\r\n  //   }\r\n\r\n  //   handlePasswordLoginChange = event => {\r\n  //     event.preventDefault()\r\n  //     this.setState({ login_password: event.target.value });\r\n  //   }\r\n\r\n  handleUserRegisChange = event => {\r\n    event.preventDefault()\r\n    this.username = event.target.value;\r\n  }\r\n\r\n  handlePasswordRegisChange = event => {\r\n    event.preventDefault()\r\n    this.password = event.target.value;\r\n  }\r\n\r\n  handleNameChange = event => {\r\n    event.preventDefault()\r\n    this.name = event.target.value;\r\n  }\r\n\r\n  handleEmailChange = event => {\r\n    event.preventDefault()\r\n    this.email = event.target.value;\r\n  }\r\n\r\n  handleLicenseChange = event => {\r\n    event.preventDefault()\r\n    this.license = event.target.value;\r\n  }\r\n\r\n  handleRoleChange = event => {\r\n    event.preventDefault()\r\n    this.role = document.getElementById(\"role\").value;\r\n  }\r\n\r\n  handleAddressChange = event => {\r\n    event.preventDefault()\r\n    this.address = event.target.value;\r\n  }\r\n\r\n  //   handleAdminIdChange = event => {\r\n  //     event.preventDefault()\r\n  //     this.setState({ admin_id: event.target.value });\r\n  //   }\r\n\r\n  //   handleAdminPwChange = event => {\r\n  //     event.preventDefault()\r\n  //     this.setState({ admin_pw: event.target.value });\r\n  //   }\r\n\r\n  //   callLogin() {\r\n  //     if (this.state.login_password && this.state.login_username) {\r\n  //       const loginData = {\r\n  //         username: this.state.login_username,\r\n  //         password: this.state.login_password\r\n  //       }\r\n  //       $.ajax({\r\n  //         url: 'http://localhost:4000/login',\r\n  //         type: 'POST',\r\n  //         contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\r\n  //         crossDomain: true,\r\n  //         dataType: 'json',\r\n  //         xhrFields: { withCredentials: true },\r\n  //         data: {\r\n  //           username: this.state.login_username,\r\n  //           password: this.state.login_password\r\n  //         },\r\n  //         success: (data) => {\r\n  //           if (data.message === \"OK\") {\r\n  //             this.setState({ login_success: true });\r\n  //             console.log('success');\r\n  //           } else {\r\n  //             this.setState({ login_success: false });\r\n  //             console.log('failure');\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //     } else {\r\n  //       alert(\"Please fill in login form fields.\")\r\n  //     }\r\n  //   }\r\n\r\n  validateEmail(email) {\r\n    if (!email) {\r\n      return true;\r\n    }\r\n    var re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n  }\r\n\r\n  callRegister() {\r\n    !this.username ? this.username_err = true : this.username_err = false;\r\n    !this.name ? this.name_err = true : this.name_err = false;\r\n    !this.password ? this.password_err = true : this.password_err = false;\r\n    !this.address ? this.address_err = true : this.address_err = false;\r\n    !this.license ? this.license_err = true : this.license_err = false;\r\n    !this.email || !this.validateEmail(this.email) ? this.email_err = true : this.email_err = false;\r\n    if (!this.username_err && !this.name_err\r\n      && !this.password_err && !this.license_err\r\n      && !this.address_err && !this.email_err) {\r\n      $.ajax({\r\n        url: 'http://localhost:4000/register',\r\n        type: 'POST',\r\n        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\r\n        crossDomain: true,\r\n        dataType: 'json',\r\n        xhrFields: { withCredentials: true },\r\n        data: {\r\n          username: this.username,\r\n          password: this.password\r\n        },\r\n        success: (data) => {\r\n          if (data.message === \"OK\") {\r\n            this.registration_errmsg = \"\";\r\n            console.log('success');\r\n            this.setState({ regis_success: true });\r\n            this.props.history.replace('/signup');\r\n          } else {\r\n            this.registration_errmsg = data.result;\r\n            console.log(this.registration_errmsg);\r\n            this.setState({ regis_success: false });\r\n            console.log('failure');\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      console.log(\"failed to call register, \"+this.state.regis_success)\r\n      this.setState({ regis_success: false });\r\n    }\r\n  }\r\n\r\n  //   callEnrollAdmin() {\r\n  //     if (this.state.admin_id && this.state.admin_pw) {\r\n  //       const adminData = {\r\n  //         id: this.state.admin_id,\r\n  //         pw: this.state.admin_pw\r\n  //       }\r\n  //       console.log(JSON.stringify(adminData))\r\n  //       $.ajax({\r\n  //         url: 'http://localhost:4000/enroll',\r\n  //         context: document.body,\r\n  //         type: 'POST',\r\n  //         contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\r\n  //         crossDomain: true,\r\n  //         dataType: 'json',\r\n  //         xhrFields: { withCredentials: true },\r\n  //         data: {\r\n  //           id: this.state.admin_id,\r\n  //           pw: this.state.admin_pw\r\n  //         },\r\n  //         success: (data) => {\r\n  //           if (data.message === \"OK\") {\r\n  //             this.setState({ enroll_success: true });\r\n  //             console.log('success');\r\n  //           } else {\r\n  //             this.setState({ enroll_success: false });\r\n  //             console.log('failure');\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //     else {\r\n  //       alert(\"Please fill in admin form fields.\")\r\n  //     }\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"interface\">\r\n        {this.redirectAfterRegister()}\r\n        <div className=\"registerUserForm\">\r\n            <input type=\"text\" className=\"regFormField\" placeholder=\"Username\" onChange={this.handleUserRegisChange} />\r\n            {this.registration_errmsg === \"user duplicate\" ?\r\n              <div className=\"error_msg\">Someone is already using this username.</div>\r\n              : null\r\n            }\r\n            {this.username_err ?\r\n              <div className=\"error_msg\">Fill in your username.</div>\r\n              : null\r\n            }\r\n            {this.username_err || this.registration_errmsg === \"user duplicate\" ? null : <br></br>}\r\n            <input type=\"password\" className=\"regFormField\" placeholder=\"Password\" onChange={this.handlePasswordRegisChange} />\r\n            {this.password_err ?\r\n              <div className=\"error_msg\">Fill in your password.</div>\r\n              : <br></br>\r\n            }\r\n            <input type=\"text\" className=\"regFormField\" placeholder=\"Name\" onChange={this.handleNameChange} />\r\n            {this.name_err ?\r\n              <div className=\"error_msg\">Fill in your name.</div>\r\n              : <br></br>\r\n            }\r\n            <input type=\"email\" className=\"regFormField\" placeholder=\"Email\" onChange={this.handleEmailChange} />\r\n            {this.email_err ?\r\n              <div className=\"error_msg\">Enter a valid email address.</div>\r\n              : <br></br>\r\n            }\r\n            <input type=\"text\" className=\"regFormField\" placeholder=\"Address\" onChange={this.handleAddressChange} />\r\n            {this.address_err ?\r\n              <div className=\"error_msg\">Fill in your address.</div>\r\n              : <br></br>\r\n            }\r\n            <div>\r\n              <input type=\"text\" className=\"regFormField\" placeholder=\"License\" onChange={this.handleLicenseChange} />\r\n              {this.license_err ?\r\n                <div className=\"error_msg\">Fill in your license.</div>\r\n                : <br></br>\r\n              }\r\n              <select className=\"regFormField\" id=\"role\" onChange={this.handleRoleChange}>\r\n                <option value=\"bus\">Business</option>\r\n                <option value=\"fin\">Financial Institution</option>\r\n                <option value=\"reg\">Regulator</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n            {this.registration_errmsg === \"admin null\" ?\r\n              <div className=\"error_msg\">There is no admin node available.</div>\r\n              : null\r\n            }\r\n              <input type=\"submit\" className=\"submitButton\" value=\"Register\" onClick={this.callRegister}></input>\r\n            </div>\r\n        </div>\r\n        <div className=\"loginDiv\">\r\n        <Button onClick={this.props.history.replace('/home')}>Don't have an account? Sign Up</Button>\r\n        </div>\r\n        {/* <div className=\"enrollAdminForm\">\r\n          <input type=\"text\" className=\"adFormField\" placeholder=\"Admin ID\" onChange={this.handleAdminIdChange} />\r\n          <input type=\"password\" className=\"adFormField\" placeholder=\"Admin Password\" onChange={this.handleAdminPwChange} />\r\n          <input type=\"submit\" value=\"Enroll\" onClick={this.callEnrollAdmin}></input>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}